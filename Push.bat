@echo off
chcp 65001 >nul
setlocal

echo ===============================
echo üöÄ Auto Push + Update Release
echo ===============================

REM === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
set TAG=v1.0.0
set WORKFLOW_NAME=Build ESP8266 Sketch
set WAIT_TIME=20
set MAX_ATTEMPTS=20

REM === 1. –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è ===
git add .

REM === 2. –ö–æ–º–º–∏—Ç ===
set /p MSG="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–æ–º–º–∏—Ç–∞: "
if "%MSG%"=="" set MSG=Auto update
git commit -m "%MSG%"

REM === 3. –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–≥ –Ω–∞ –Ω–æ–≤—ã–π –∫–æ–º–º–∏—Ç ===
git tag -f %TAG%
git push origin main
git push origin -f %TAG%

REM === 4. –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∏ SHA –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–º–º–∏—Ç–∞ ===
for /f "tokens=*" %%i in ('git log -1 --format="%%cI"') do set COMMIT_DATE=%%i
for /f "tokens=*" %%i in ('git rev-parse HEAD') do set COMMIT_SHA=%%i
echo SHA –∫–æ–º–º–∏—Ç–∞: %COMMIT_SHA%
echo Commit date: %COMMIT_DATE%
echo.

REM === 5. –ñ–¥—ë–º workflow, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —ç—Ç–∏–º –∫–æ–º–º–∏—Ç–æ–º (–ø–æ –¥–∞—Ç–µ) ===
set ATTEMPT=0
:WAIT_WORKFLOW
set /a ATTEMPT+=1
set RUN_ID=
for /f "tokens=*" %%i in (
    'gh run list --workflow "%WORKFLOW_NAME%" --branch main --created "%COMMIT_DATE%" --limit 1 --json databaseId -q ".[0].databaseId"'
) do set RUN_ID=%%i

if "%RUN_ID%"=="" (
    if %ATTEMPT% GEQ %MAX_ATTEMPTS% (
        echo ‚ùå Workflow —Ç–∞–∫ –∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ.
        pause
        exit /b
    )
    echo ‚è≥ Workflow –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω, –∂–¥—ë–º %WAIT_TIME% —Å–µ–∫—É–Ω–¥...
    timeout /t %WAIT_TIME% >nul
    goto WAIT_WORKFLOW
)

echo ‚úÖ Workflow –Ω–∞–π–¥–µ–Ω! ID=%RUN_ID%
echo.

REM === 6. –ñ–¥—ë–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è workflow ===
:WAIT_COMPLETION
set STATUS=
for /f "tokens=*" %%i in ('gh run view %RUN_ID% --json status -q ".status"') do set STATUS=%%i

if "%STATUS%"=="in_progress" (
    echo ‚è≥ Workflow –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∂–¥—ë–º %WAIT_TIME% —Å–µ–∫—É–Ω–¥...
    timeout /t %WAIT_TIME% >nul
    goto WAIT_COMPLETION
)

if "%STATUS%"=="queued" (
    echo ‚è≥ Workflow –µ—â—ë –≤ –æ—á–µ—Ä–µ–¥–∏, –∂–¥—ë–º %WAIT_TIME% —Å–µ–∫—É–Ω–¥...
    timeout /t %WAIT_TIME% >nul
    goto WAIT_COMPLETION
)

echo ‚úÖ Workflow –∑–∞–≤–µ—Ä—à—ë–Ω.
echo.

REM === 7. –°–∫–∞—á–∏–≤–∞–µ–º —Å–≤–µ–∂–∏–π build-log.txt –∏–∑ —Ä–µ–ª–∏–∑–∞ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º ===
set ATTEMPT=0
set MAX_ATTEMPTS_LOG=10
set WAIT_LOG=5

:WAIT_LOG_FILE
set /a ATTEMPT+=1
gh release download %TAG% --pattern "build-log.txt" --dir . >nul 2>&1

if not exist build-log.txt (
    if %ATTEMPT% GEQ %MAX_ATTEMPTS_LOG (
        echo ‚ùå build-log.txt –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–ª–∏–∑–µ %TAG% –ø–æ—Å–ª–µ –æ–∂–∏–¥–∞–Ω–∏—è
        pause
        exit /b
    )
    echo ‚è≥ build-log.txt –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∂–¥—ë–º %WAIT_LOG% —Å–µ–∫—É–Ω–¥...
    timeout /t %WAIT_LOG% >nul
    goto WAIT_LOG_FILE
)

for %%i in (build-log.txt) do set FILESIZE=%%~zi
if "%FILESIZE%"=="0" (
    if %ATTEMPT% GEQ %MAX_ATTEMPTS_LOG (
        echo ‚ùå build-log.txt –ø—É—Å—Ç–æ–π –ø–æ—Å–ª–µ –æ–∂–∏–¥–∞–Ω–∏—è
        pause
        exit /b
    )
    echo ‚è≥ build-log.txt –ø—É—Å—Ç–æ–π, –∂–¥—ë–º %WAIT_LOG% —Å–µ–∫—É–Ω–¥...
    timeout /t %WAIT_LOG% >nul
    goto WAIT_LOG_FILE
)

echo ‚úÖ build-log.txt –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –Ω–µ –ø—É—Å—Ç–æ–π
echo.
echo ‚è¨ –õ–æ–≥ —Å–±–æ—Ä–∫–∏:
type build-log.txt

pause