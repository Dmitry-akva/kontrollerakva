@echo off
chcp 65001 >nul
setlocal

echo ===============================
echo üöÄ Auto Push + Update Release
echo ===============================

REM === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
set TAG=v1.0.0

REM === 1. –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è ===
git add .

REM === 2. –ö–æ–º–º–∏—Ç ===
set /p MSG="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–æ–º–º–∏—Ç–∞: "
if "%MSG%"=="" set MSG=Auto update
git commit -m "%MSG%"

REM === 3. –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–≥ –Ω–∞ –Ω–æ–≤—ã–π –∫–æ–º–º–∏—Ç ===
git tag -f %TAG%
git push origin main
git push origin -f %TAG%

REM === 4. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ä–µ–ª–∏–∑–∞ ===
for /f "tokens=*" %%i in ('gh release view %TAG% --json id -q ".id" 2^>nul') do set RELEASE_ID=%%i
if defined RELEASE_ID (
    echo ‚ùå –†–µ–ª–∏–∑ %TAG% –Ω–∞–π–¥–µ–Ω. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã...
    for /f "tokens=*" %%a in ('gh release view %TAG% --json assets -q ".assets[].name"') do (
        echo –£–¥–∞–ª—è–µ–º %%a
        gh release delete-asset %%a --release %RELEASE_ID% --confirm
    )
)

REM === 5. –¶–∏–∫–ª —Å–∫–∞—á–∏–≤–∞–Ω–∏—è build-log.txt –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ —Ñ–∞–π–ª –Ω–µ –±—É–¥–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π ===
:DOWNLOAD_LOG
echo ‚è¨ –°–∫–∞—á–∏–≤–∞–µ–º build-log.txt –∏–∑ —Ä–µ–ª–∏–∑–∞ %TAG%...
gh release download %TAG% --pattern "build-log.txt" --dir . --force

if not exist build-log.txt (
    echo ‚ö†Ô∏è –§–∞–π–ª build-log.txt –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...
    timeout /t 10 >nul
    goto DOWNLOAD_LOG
)

for %%i in (build-log.txt) do if %%~zi==0 (
    echo ‚ö†Ô∏è –§–∞–π–ª –ø—É—Å—Ç–æ–π. –ü—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...
    timeout /t 10 >nul
    goto DOWNLOAD_LOG
)

REM === 6. –í—ã–≤–æ–¥–∏–º –ª–æ–≥ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª ===
type build-log.txt

echo.
echo ===============================
echo ‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ!
echo ===============================
pause