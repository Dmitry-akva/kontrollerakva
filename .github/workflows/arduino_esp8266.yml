name: Build ESP8266 Sketch

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Кэш Arduino CLI
      - name: Cache Arduino CLI
        id: cache-arduino-cli
        uses: actions/cache@v3
        with:
          path: ./bin
          key: arduino-cli-Linux-v1.3.1

      # 3. Установка Arduino CLI
      - name: Install Arduino CLI
        if: steps.cache-arduino-cli.outputs.cache-hit != 'true'
        run: |
          curl -fsSL https://downloads.arduino.cc/arduino-cli/arduino-cli_1.3.1_Linux_64bit.tar.gz | tar xz
          mv arduino-cli ./bin/arduino-cli
          chmod +x ./bin/arduino-cli
          mkdir -p ~/.arduino15

      # 4. Кэш ESP8266 core
      - name: Cache ESP8266 platform
        id: cache-esp8266-core
        uses: actions/cache@v3
        with:
          path: ~/.arduino15/packages/esp8266
          key: esp8266-core-Linux-v3.1.2

      # 5. Установка ESP8266 core
      - name: Install ESP8266 core
        if: steps.cache-esp8266-core.outputs.cache-hit != 'true'
        run: |
          ./bin/arduino-cli config init --additional-urls http://arduino.esp8266.com/stable/package_esp8266com_index.json
          ./bin/arduino-cli core update-index
          ./bin/arduino-cli core install esp8266:esp8266@3.1.2

      # 6. Кэш библиотек Arduino
      - name: Cache Arduino libraries
        uses: actions/cache@v3
        with:
          path: ~/Arduino/libraries
          key: arduino-libraries-${{ hashFiles('**/*.ino', '**/library.properties') }}

      # 7. Установка локальных библиотек проекта
      - name: Install project libraries
        run: |
          mkdir -p ~/Arduino/libraries
          if [ -d ./libraries ]; then
            cp -r ./libraries/* ~/Arduino/libraries/
          fi

      # 8. Очистка папки build
      - name: Clean build folder
        run: |
          rm -rf ./build
          mkdir -p ./build/esp8266

      # 9. Компиляция скетча Blink
      - name: Compile Blink sketch
        run: |
          ./bin/arduino-cli compile \
            --fqbn esp8266:esp8266:nodemcuv2 \
            --build-path ./build/esp8266 \
            --build-cache-path ./build/cache \
            ./Blink

      # 10. Проверка созданных файлов
      - name: List build files
        run: ls -la ./build/esp8266/

      # 11. Создание zip архива build (для релиза)
      - name: Zip build folder
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd ./build
          zip -r esp8266-build.zip esp8266

      # 12. Проверка существования файлов для релиза
      - name: Check release files exist
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "Files to be included in release:"
          ls -la ./build/esp8266/Blink.ino.bin
          ls -la ./build/esp8266/Blink.ino.elf
          ls -la ./build/esp8266/Blink.ino.map
          ls -la ./build/esp8266-build.zip

      # 13. Создание Release
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./build/esp8266/Blink.ino.bin
            ./build/esp8266/Blink.ino.elf
            ./build/esp8266/Blink.ino.map
            ./build/esp8266-build.zip
