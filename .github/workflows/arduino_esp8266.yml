name: Build ESP8266 Sketch

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонируем репозиторий
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Кэш Arduino CLI
      - name: Cache Arduino CLI
        uses: actions/cache@v3
        with:
          path: bin
          key: arduino-cli-${{ runner.os }}-v1.3.1

      # 3. Устанавливаем Arduino CLI, если кэш не найден
      - name: Install Arduino CLI
        if: steps.cache-arduino-cli.outputs.cache-hit != 'true'
        run: |
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh

      # 4. Кэш ESP8266 core и инструментов
      - name: Cache ESP8266 platform and tools
        uses: actions/cache@v3
        with:
          path: /home/runner/.arduino15/packages/esp8266
          key: esp8266-core-${{ runner.os }}-v3.1.2

      # 5. Кэш индексов библиотек Arduino
      - name: Cache Arduino library indexes
        uses: actions/cache@v3
        with:
          path: |
            /home/runner/.arduino15/library_index.tar.bz2
            /home/runner/.arduino15/package_index.tar.bz2
            /home/runner/.arduino15/package_esp8266com_index.json
          key: arduino-indexes-${{ runner.os }}-v1

      # 6. Кэш локальных библиотек проекта (если есть)
      - name: Cache local Arduino libraries
        uses: actions/cache@v3
        with:
          path: ./lib
          key: arduino-libraries-${{ runner.os }}-v1

      # 7. Устанавливаем ESP8266 core, если кэш не найден
      - name: Install ESP8266 core
        if: steps.cache-esp8266-core.outputs.cache-hit != 'true'
        run: |
          ./bin/arduino-cli config init --additional-urls http://arduino.esp8266.com/stable/package_esp8266com_index.json
          ./bin/arduino-cli core update-index
          ./bin/arduino-cli core install esp8266:esp8266@3.1.2

      # 8. Компилируем скетч
      - name: Compile Blink sketch
        run: |
          ./bin/arduino-cli compile \
            --fqbn esp8266:esp8266:nodemcuv2 \
            --build-path ./build \
            ./Blink -v

      # 9. Сохраняем .bin как артефакт
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Blink-bin
          path: ./build/esp8266/esp8266.nodemcuv2/Blink.ino.bin
