name: Build ESP8266 Sketch

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонируем репозиторий
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Кэш Arduino CLI
      - name: Cache Arduino CLI
        uses: actions/cache@v3
        with:
          path: ./bin
          key: arduino-cli-Linux-v1.3.1

      # 1. Ставим Arduino CLI 1.3.1
      - name: Install Arduino CLI
        run: |
          curl -fsSL https://downloads.arduino.cc/arduino-cli/arduino-cli_1.3.1_Linux_64bit.tar.gz | tar xz
          mkdir -p ~/.arduino15

      # 2. Конфигурируем Arduino CLI и ставим ESP8266 core 3.1.2 с фиксированным toolchain
      - name: Install ESP8266 core 3.1.2
        run: |
          ./arduino-cli config init --additional-urls http://arduino.esp8266.com/stable/package_esp8266com_index.json
          ./arduino-cli core update-index
          ./arduino-cli core install esp8266:esp8266@3.1.2

          # фиксируем нужную версию компилятора (toolchain-xtensa)
          ./arduino-cli core install esp8266:xtensa-lx106-elf-gcc@2.5.0-4-b40a506


      # 4. Кэш платформы ESP8266
      - name: Cache ESP8266 platform
        uses: actions/cache@v3
        with:
          path: ~/.arduino15/packages/esp8266
          key: esp8266-core-Linux-v3.1.2

      # 5. Кэш библиотек Arduino
      - name: Cache Arduino libraries
        uses: actions/cache@v3
        with:
          path: ~/.arduino15/libraries
          key: arduino-libraries-${{ hashFiles('**/*.ino') }}

      # 6. Устанавливаем все библиотеки проекта (если есть)
      - name: Install project libraries
        run: |
          if [ -d ./libraries ]; then
            for lib in ./libraries/*; do
              ./bin/arduino-cli lib install "$lib"
            done
          fi
      # 7. Очищаем папку build перед компиляцией
      - name: Clean build folder
        run: |
          rm -rf ./build/esp8266
          mkdir -p ./build/esp8266
      # 8. Компиляция скетча Blink для NodeMCU 1.0
      - name: Compile Blink sketch
        run: |
          ./bin/arduino-cli compile \
            --fqbn esp8266:esp8266:nodemcuv2 \
            --build-property build.flash_size=4M \
            --build-property build.f_cpu=80 \
            --build-property upload.maximum_size=1019000 \
            --build-path ./build/esp8266 \
            ./Blink
      # 9. Загружаем BIN как артефакт
      - name: Upload BIN artifact
        uses: actions/upload-artifact@v4
        with:
          name: Blink-BIN
          path: ./build/esp8266/**/*.bin
